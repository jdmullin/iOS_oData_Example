/**
*
*Copyright 2010 Microsoft Corp
*
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at
*
*http://www.apache.org/licenses/LICENSE-2.0
*
*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
*/
/**
* This code was generated by the tool 'odatagen'.
* Runtime Version:1.0
*
* Changes to this file may cause incorrect behavior and will be lost if
* the code is regenerated.
*/
#import "NetflixCatalog.h"

@implementation NetflixCatalog_Model_BoxArt
	@synthesize m_SmallUrl;
	@synthesize m_MediumUrl;
	@synthesize m_LargeUrl;
	@synthesize m_HighDefinitionUrl;
@end

@implementation NetflixCatalog_Model_InstantAvailability
	@synthesize m_Available;
	@synthesize m_AvailableFrom;
	@synthesize m_AvailableTo;
	@synthesize m_HighDefinitionAvailable;
	@synthesize m_Runtime;
	@synthesize m_Rating;
@end

@implementation NetflixCatalog_Model_DeliveryFormatAvailability
	@synthesize m_Available;
	@synthesize m_AvailableFrom;
	@synthesize m_AvailableTo;
	@synthesize m_Runtime;
	@synthesize m_Rating;
@end
/**
 * @interface:Genre
 * @key:Name
 */
@implementation NetflixCatalog_Model_Genre
	@synthesize m_Name;
	@synthesize m_Titles;

/**
 *Method to create an instance of Genre
 */
+ (id) CreateGenreWithname:(NSString *)aName
{
	NetflixCatalog_Model_Genre *aGenre = [[NetflixCatalog_Model_Genre alloc]init];
	
	aGenre.m_Name = aName;

	return aGenre;
}
/**
 * Initialising object for Genre
 */
- (id) init
{
	self=[self initWithUri:nil];
	return self;
}

- (id) initWithUri:(NSString*)anUri 
{
	if(self=[super initWithUri:anUri])
	{
		[self setBaseURI:anUri];
		m_OData_hasStream.booleanvalue=NO;
		[m_OData_entityMap setObject:@"Titles" forKey:@"Titles"];
		mProperties *obj;
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"50" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"SyndicationTitle" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Name"];
		[obj release];
		
		[m_OData_entityFKRelation setObject:@"TitleGenres" forKey:@"Titles"];

		NSMutableArray *anEntityKey=[[NSMutableArray alloc]init];
		[anEntityKey addObject:@"Name"];
		[m_OData_entityKey setObject:anEntityKey forKey:@"Genre"];
		[anEntityKey release];
	}
	return self;
}

-(NSMutableArray *)getSyndicateArray
{
	NSMutableArray *syndicateArray=[[NSMutableArray alloc]init];
	[syndicateArray addObject:@"m_Name"];
	
	return [syndicateArray autorelease];
}
-(NetflixCatalog_Model_Genre *)getDeepCopy
{
	NetflixCatalog_Model_Genre *obj=[[NetflixCatalog_Model_Genre alloc]initWithUri:[self getBaseURI]];
	[obj setName:[self getName]];
	[obj setTitles:[self getTitles]];

	return [obj autorelease];
}
- (void) dealloc
{
	[m_Name release];
	m_Name = nil;
	
	[m_Titles release];
	m_Titles = nil;
	[super dealloc];
}

@end
/**
 * @interface:Language
 * @key:Name
 */
@implementation NetflixCatalog_Model_Language
	@synthesize m_Name;
	@synthesize m_Titles;

/**
 *Method to create an instance of Language
 */
+ (id) CreateLanguageWithname:(NSString *)aName
{
	NetflixCatalog_Model_Language *aLanguage = [[NetflixCatalog_Model_Language alloc]init];
	
	aLanguage.m_Name = aName;

	return aLanguage;
}
/**
 * Initialising object for Language
 */
- (id) init
{
	self=[self initWithUri:nil];
	return self;
}

- (id) initWithUri:(NSString*)anUri 
{
	if(self=[super initWithUri:anUri])
	{
		[self setBaseURI:anUri];
		m_OData_hasStream.booleanvalue=NO;
		[m_OData_entityMap setObject:@"Titles" forKey:@"Titles"];
		mProperties *obj;
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"80" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"SyndicationTitle" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Name"];
		[obj release];
		
		[m_OData_entityFKRelation setObject:@"TitleLanguages" forKey:@"Titles"];

		NSMutableArray *anEntityKey=[[NSMutableArray alloc]init];
		[anEntityKey addObject:@"Name"];
		[m_OData_entityKey setObject:anEntityKey forKey:@"Language"];
		[anEntityKey release];
	}
	return self;
}

-(NSMutableArray *)getSyndicateArray
{
	NSMutableArray *syndicateArray=[[NSMutableArray alloc]init];
	[syndicateArray addObject:@"m_Name"];
	
	return [syndicateArray autorelease];
}
-(NetflixCatalog_Model_Language *)getDeepCopy
{
	NetflixCatalog_Model_Language *obj=[[NetflixCatalog_Model_Language alloc]initWithUri:[self getBaseURI]];
	[obj setName:[self getName]];
	[obj setTitles:[self getTitles]];

	return [obj autorelease];
}
- (void) dealloc
{
	[m_Name release];
	m_Name = nil;
	
	[m_Titles release];
	m_Titles = nil;
	[super dealloc];
}

@end
/**
 * @interface:Person
 * @key:Id
 */
@implementation NetflixCatalog_Model_Person
	@synthesize m_Id;
	@synthesize m_Name;
	@synthesize m_Awards;
	@synthesize m_TitlesActedIn;
	@synthesize m_TitlesDirected;

/**
 *Method to create an instance of Person
 */
+ (id) CreatePersonWithid:(NSNumber *)aId name:(NSString *)aName
{
	NetflixCatalog_Model_Person *aPerson = [[NetflixCatalog_Model_Person alloc]init];
	
	aPerson.m_Id = aId;

	
	aPerson.m_Name = aName;

	return aPerson;
}
/**
 * Initialising object for Person
 */
- (id) init
{
	self=[self initWithUri:nil];
	return self;
}

- (id) initWithUri:(NSString*)anUri 
{
	if(self=[super initWithUri:anUri])
	{
		[self setBaseURI:anUri];
		m_OData_hasStream.booleanvalue=NO;
		[m_OData_entityMap setObject:@"TitleAwards" forKey:@"Awards"];
		[m_OData_entityMap setObject:@"Titles" forKey:@"TitlesActedIn"];
		[m_OData_entityMap setObject:@"Titles" forKey:@"TitlesDirected"];
		mProperties *obj;
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Int32" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Id"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"80" MinLength:@"" FixedLength:NO Nullable:NO Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"SyndicationTitle" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Name"];
		[obj release];
		
		[m_OData_entityFKRelation setObject:@"FK_TitleAward_Person" forKey:@"TitleAwards"];
		[m_OData_entityFKRelation setObject:@"TitleActors" forKey:@"Titles"];
		[m_OData_entityFKRelation setObject:@"TitleDirectors" forKey:@"Titles"];

		NSMutableArray *anEntityKey=[[NSMutableArray alloc]init];
		[anEntityKey addObject:@"Id"];
		[m_OData_entityKey setObject:anEntityKey forKey:@"Person"];
		[anEntityKey release];
	}
	return self;
}

-(NSMutableArray *)getSyndicateArray
{
	NSMutableArray *syndicateArray=[[NSMutableArray alloc]init];
	[syndicateArray addObject:@"m_Name"];
	
	return [syndicateArray autorelease];
}
-(NetflixCatalog_Model_Person *)getDeepCopy
{
	NetflixCatalog_Model_Person *obj=[[NetflixCatalog_Model_Person alloc]initWithUri:[self getBaseURI]];
	[obj setId:[self getId]];
	[obj setName:[self getName]];
	[obj setAwards:[self getAwards]];
	[obj setTitlesActedIn:[self getTitlesActedIn]];
	[obj setTitlesDirected:[self getTitlesDirected]];

	return [obj autorelease];
}
- (void) dealloc
{
	[m_Id release];
	m_Id = nil;
	[m_Name release];
	m_Name = nil;
	
	[m_Awards release];
	m_Awards = nil;
	[m_TitlesActedIn release];
	m_TitlesActedIn = nil;
	[m_TitlesDirected release];
	m_TitlesDirected = nil;
	[super dealloc];
}

@end
/**
 * @interface:TitleAudioFormat
 * @key:TitleId
 * @key:DeliveryFormat
 * @key:Language
 * @key:Format
 */
@implementation NetflixCatalog_Model_TitleAudioFormat
	@synthesize m_TitleId;
	@synthesize m_DeliveryFormat;
	@synthesize m_Language;
	@synthesize m_Format;
	@synthesize m_Title;

/**
 *Method to create an instance of TitleAudioFormat
 */
+ (id) CreateTitleAudioFormatWithtitleid:(NSString *)aTitleId deliveryformat:(NSString *)aDeliveryFormat language:(NSString *)aLanguage format:(NSString *)aFormat
{
	NetflixCatalog_Model_TitleAudioFormat *aTitleAudioFormat = [[NetflixCatalog_Model_TitleAudioFormat alloc]init];
	
	aTitleAudioFormat.m_TitleId = aTitleId;

	
	aTitleAudioFormat.m_DeliveryFormat = aDeliveryFormat;

	
	aTitleAudioFormat.m_Language = aLanguage;

	
	aTitleAudioFormat.m_Format = aFormat;

	return aTitleAudioFormat;
}
/**
 * Initialising object for TitleAudioFormat
 */
- (id) init
{
	self=[self initWithUri:nil];
	return self;
}

- (id) initWithUri:(NSString*)anUri 
{
	if(self=[super initWithUri:anUri])
	{
		[self setBaseURI:anUri];
		m_OData_hasStream.booleanvalue=NO;
		[m_OData_entityMap setObject:@"Titles" forKey:@"Title"];
		mProperties *obj;
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"30" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_TitleId"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"10" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_DeliveryFormat"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"30" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Language"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"30" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Format"];
		[obj release];
		
		[m_OData_entityFKRelation setObject:@"FK_TitleAudioFormat_Title" forKey:@"Titles"];

		NSMutableArray *anEntityKey=[[NSMutableArray alloc]init];
		[anEntityKey addObject:@"TitleId"];
		[anEntityKey addObject:@"DeliveryFormat"];
		[anEntityKey addObject:@"Language"];
		[anEntityKey addObject:@"Format"];
		[m_OData_entityKey setObject:anEntityKey forKey:@"TitleAudioFormat"];
		[anEntityKey release];
	}
	return self;
}

-(NSMutableArray *)getSyndicateArray
{
	NSMutableArray *syndicateArray=[[NSMutableArray alloc]init];
	
	return [syndicateArray autorelease];
}
-(NetflixCatalog_Model_TitleAudioFormat *)getDeepCopy
{
	NetflixCatalog_Model_TitleAudioFormat *obj=[[NetflixCatalog_Model_TitleAudioFormat alloc]initWithUri:[self getBaseURI]];
	[obj setTitleId:[self getTitleId]];
	[obj setDeliveryFormat:[self getDeliveryFormat]];
	[obj setLanguage:[self getLanguage]];
	[obj setFormat:[self getFormat]];
	[obj setTitle:[self getTitle]];

	return [obj autorelease];
}
- (void) dealloc
{
	[m_TitleId release];
	m_TitleId = nil;
	[m_DeliveryFormat release];
	m_DeliveryFormat = nil;
	[m_Language release];
	m_Language = nil;
	[m_Format release];
	m_Format = nil;
	
	[m_Title release];
	m_Title = nil;
	[super dealloc];
}

@end
/**
 * @interface:TitleAward
 * @key:Id
 */
@implementation NetflixCatalog_Model_TitleAward
	@synthesize m_Id;
	@synthesize m_Type;
	@synthesize m_Category;
	@synthesize m_Year;
	@synthesize m_Won;
	@synthesize m_Title;
	@synthesize m_Person;

/**
 *Method to create an instance of TitleAward
 */
+ (id) CreateTitleAwardWithid:(NSString *)aId type:(NSString *)aType category:(NSString *)aCategory won:(ODataBool *)aWon
{
	NetflixCatalog_Model_TitleAward *aTitleAward = [[NetflixCatalog_Model_TitleAward alloc]init];
	
	aTitleAward.m_Id = aId;

	
	aTitleAward.m_Type = aType;

	
	aTitleAward.m_Category = aCategory;

	
	aTitleAward.m_Won = aWon;

	return aTitleAward;
}
/**
 * Initialising object for TitleAward
 */
- (id) init
{
	self=[self initWithUri:nil];
	return self;
}

- (id) initWithUri:(NSString*)anUri 
{
	if(self=[super initWithUri:anUri])
	{
		[self setBaseURI:anUri];
		m_OData_hasStream.booleanvalue=NO;
		[m_OData_entityMap setObject:@"Titles" forKey:@"Title"];
		[m_OData_entityMap setObject:@"People" forKey:@"Person"];
		mProperties *obj;
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Guid" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Id"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"30" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Type"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"60" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Category"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Int32" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Year"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Boolean" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Won"];
		[obj release];
		
		[m_OData_entityFKRelation setObject:@"FK_TitleAward_Title" forKey:@"Titles"];
		[m_OData_entityFKRelation setObject:@"FK_TitleAward_Person" forKey:@"People"];

		NSMutableArray *anEntityKey=[[NSMutableArray alloc]init];
		[anEntityKey addObject:@"Id"];
		[m_OData_entityKey setObject:anEntityKey forKey:@"TitleAward"];
		[anEntityKey release];
	}
	return self;
}

-(NSMutableArray *)getSyndicateArray
{
	NSMutableArray *syndicateArray=[[NSMutableArray alloc]init];
	
	return [syndicateArray autorelease];
}
-(NetflixCatalog_Model_TitleAward *)getDeepCopy
{
	NetflixCatalog_Model_TitleAward *obj=[[NetflixCatalog_Model_TitleAward alloc]initWithUri:[self getBaseURI]];
	[obj setId:[self getId]];
	[obj setType:[self getType]];
	[obj setCategory:[self getCategory]];
	[obj setYear:[self getYear]];
	[obj setWon:[self getWon]];
	[obj setTitle:[self getTitle]];
	[obj setPerson:[self getPerson]];

	return [obj autorelease];
}
- (void) dealloc
{
	[m_Id release];
	m_Id = nil;
	[m_Type release];
	m_Type = nil;
	[m_Category release];
	m_Category = nil;
	[m_Year release];
	m_Year = nil;
	
	[m_Title release];
	m_Title = nil;
	[m_Person release];
	m_Person = nil;
	[super dealloc];
}

@end
/**
 * @interface:Title
 * @key:Id
 */
@implementation NetflixCatalog_Model_Title
	@synthesize m_Id;
	@synthesize m_Synopsis;
	@synthesize m_ShortSynopsis;
	@synthesize m_AverageRating;
	@synthesize m_ReleaseYear;
	@synthesize m_Url;
	@synthesize m_Runtime;
	@synthesize m_Rating;
	@synthesize m_DateModified;
	@synthesize m_Type;
	@synthesize m_BoxArt;
	@synthesize m_ShortName;
	@synthesize m_Name;
	@synthesize m_Instant;
	@synthesize m_Dvd;
	@synthesize m_BluRay;
	@synthesize m_TinyUrl;
	@synthesize m_WebsiteUrl;
	@synthesize m_NetflixApiId;
	@synthesize m_AudioFormats;
	@synthesize m_Awards;
	@synthesize m_Disc;
	@synthesize m_Movie;
	@synthesize m_Season;
	@synthesize m_Series;
	@synthesize m_ScreenFormats;
	@synthesize m_Cast;
	@synthesize m_Languages;
	@synthesize m_Directors;
	@synthesize m_Genres;

/**
 *Method to create an instance of Title
 */
+ (id) CreateTitleWithid:(NSString *)aId datemodified:(NSDate *)aDateModified type:(NSString *)aType boxart:(NetflixCatalog_Model_BoxArt *)aBoxArt shortname:(NSString *)aShortName name:(NSString *)aName instant:(NetflixCatalog_Model_InstantAvailability *)aInstant dvd:(NetflixCatalog_Model_DeliveryFormatAvailability *)aDvd bluray:(NetflixCatalog_Model_DeliveryFormatAvailability *)aBluRay tinyurl:(NSString *)aTinyUrl netflixapiid:(NSString *)aNetflixApiId
{
	NetflixCatalog_Model_Title *aTitle = [[NetflixCatalog_Model_Title alloc]init];
	
	aTitle.m_Id = aId;

	
	aTitle.m_DateModified = aDateModified;

	
	aTitle.m_Type = aType;

	
	aTitle.m_BoxArt = aBoxArt;

	
	aTitle.m_ShortName = aShortName;

	
	aTitle.m_Name = aName;

	
	aTitle.m_Instant = aInstant;

	
	aTitle.m_Dvd = aDvd;

	
	aTitle.m_BluRay = aBluRay;

	
	aTitle.m_TinyUrl = aTinyUrl;

	
	aTitle.m_NetflixApiId = aNetflixApiId;

	return aTitle;
}
/**
 * Initialising object for Title
 */
- (id) init
{
	self=[self initWithUri:nil];
	return self;
}

- (id) initWithUri:(NSString*)anUri 
{
	if(self=[super initWithUri:anUri])
	{
		[self setBaseURI:anUri];
		m_OData_hasStream.booleanvalue=YES;
		[m_OData_entityMap setObject:@"TitleAudioFormats" forKey:@"AudioFormats"];
		[m_OData_entityMap setObject:@"TitleAwards" forKey:@"Awards"];
		[m_OData_entityMap setObject:@"Titles" forKey:@"Disc"];
		[m_OData_entityMap setObject:@"Titles" forKey:@"Movie"];
		[m_OData_entityMap setObject:@"Titles" forKey:@"Season"];
		[m_OData_entityMap setObject:@"Titles" forKey:@"Series"];
		[m_OData_entityMap setObject:@"TitleScreenFormats" forKey:@"ScreenFormats"];
		[m_OData_entityMap setObject:@"People" forKey:@"Cast"];
		[m_OData_entityMap setObject:@"Language" forKey:@"Languages"];
		[m_OData_entityMap setObject:@"People" forKey:@"Directors"];
		[m_OData_entityMap setObject:@"Genres" forKey:@"Genres"];
		mProperties *obj;
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"30" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Id"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"Max" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"SyndicationSummary" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"html" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Synopsis"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"Max" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_ShortSynopsis"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Double" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_AverageRating"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Int32" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_ReleaseYear"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"200" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Url"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Int32" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Runtime"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"10" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Rating"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.DateTime" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"Fixed" FC_TargetPath:@"SyndicationUpdated" FC_KeepInContent:NO FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_DateModified"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"8" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Type"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"NetflixCatalog.Model.BoxArt" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_BoxArt"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"200" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_ShortName"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"200" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"SyndicationTitle" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Name"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"NetflixCatalog.Model.InstantAvailability" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Instant"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"NetflixCatalog.Model.DeliveryFormatAvailability" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Dvd"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"NetflixCatalog.Model.DeliveryFormatAvailability" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_BluRay"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"30" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_TinyUrl"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"200" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_WebsiteUrl"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"200" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_NetflixApiId"];
		[obj release];
		
		[m_OData_entityFKRelation setObject:@"FK_TitleAudioFormat_Title" forKey:@"TitleAudioFormats"];
		[m_OData_entityFKRelation setObject:@"FK_TitleAward_Title" forKey:@"TitleAwards"];
		[m_OData_entityFKRelation setObject:@"FK_Title_Disc" forKey:@"Titles"];
		[m_OData_entityFKRelation setObject:@"FK_Title_Movie" forKey:@"Titles"];
		[m_OData_entityFKRelation setObject:@"FK_Title_Season" forKey:@"Titles"];
		[m_OData_entityFKRelation setObject:@"FK_Title_Series" forKey:@"Titles"];
		[m_OData_entityFKRelation setObject:@"FK_TitleScreenFormat_Title" forKey:@"TitleScreenFormats"];
		[m_OData_entityFKRelation setObject:@"TitleActors" forKey:@"People"];
		[m_OData_entityFKRelation setObject:@"TitleLanguages" forKey:@"Language"];
		[m_OData_entityFKRelation setObject:@"TitleDirectors" forKey:@"People"];
		[m_OData_entityFKRelation setObject:@"TitleGenres" forKey:@"Genres"];

		NSMutableArray *anEntityKey=[[NSMutableArray alloc]init];
		[anEntityKey addObject:@"Id"];
		[m_OData_entityKey setObject:anEntityKey forKey:@"Title"];
		[anEntityKey release];
	}
	return self;
}

-(NSMutableArray *)getSyndicateArray
{
	NSMutableArray *syndicateArray=[[NSMutableArray alloc]init];
	[syndicateArray addObject:@"m_Synopsis"];
	[syndicateArray addObject:@"m_DateModified"];
	[syndicateArray addObject:@"m_Name"];
	
	return [syndicateArray autorelease];
}
-(NetflixCatalog_Model_Title *)getDeepCopy
{
	NetflixCatalog_Model_Title *obj=[[NetflixCatalog_Model_Title alloc]initWithUri:[self getBaseURI]];
	[obj setId:[self getId]];
	[obj setSynopsis:[self getSynopsis]];
	[obj setShortSynopsis:[self getShortSynopsis]];
	[obj setAverageRating:[self getAverageRating]];
	[obj setReleaseYear:[self getReleaseYear]];
	[obj setUrl:[self getUrl]];
	[obj setRuntime:[self getRuntime]];
	[obj setRating:[self getRating]];
	[obj setDateModified:[self getDateModified]];
	[obj setType:[self getType]];
	[obj setBoxArt:[self getBoxArt]];
	[obj setShortName:[self getShortName]];
	[obj setName:[self getName]];
	[obj setInstant:[self getInstant]];
	[obj setDvd:[self getDvd]];
	[obj setBluRay:[self getBluRay]];
	[obj setTinyUrl:[self getTinyUrl]];
	[obj setWebsiteUrl:[self getWebsiteUrl]];
	[obj setNetflixApiId:[self getNetflixApiId]];
	[obj setAudioFormats:[self getAudioFormats]];
	[obj setAwards:[self getAwards]];
	[obj setDisc:[self getDisc]];
	[obj setMovie:[self getMovie]];
	[obj setSeason:[self getSeason]];
	[obj setSeries:[self getSeries]];
	[obj setScreenFormats:[self getScreenFormats]];
	[obj setCast:[self getCast]];
	[obj setLanguages:[self getLanguages]];
	[obj setDirectors:[self getDirectors]];
	[obj setGenres:[self getGenres]];

	return [obj autorelease];
}
- (void) dealloc
{
	[m_Id release];
	m_Id = nil;
	[m_Synopsis release];
	m_Synopsis = nil;
	[m_ShortSynopsis release];
	m_ShortSynopsis = nil;
	[m_AverageRating release];
	m_AverageRating = nil;
	[m_ReleaseYear release];
	m_ReleaseYear = nil;
	[m_Url release];
	m_Url = nil;
	[m_Runtime release];
	m_Runtime = nil;
	[m_Rating release];
	m_Rating = nil;
	[m_DateModified release];
	m_DateModified = nil;
	[m_Type release];
	m_Type = nil;
	[m_ShortName release];
	m_ShortName = nil;
	[m_Name release];
	m_Name = nil;
	[m_TinyUrl release];
	m_TinyUrl = nil;
	[m_WebsiteUrl release];
	m_WebsiteUrl = nil;
	[m_NetflixApiId release];
	m_NetflixApiId = nil;
	
	[m_AudioFormats release];
	m_AudioFormats = nil;
	[m_Awards release];
	m_Awards = nil;
	[m_Disc release];
	m_Disc = nil;
	[m_Movie release];
	m_Movie = nil;
	[m_Season release];
	m_Season = nil;
	[m_Series release];
	m_Series = nil;
	[m_ScreenFormats release];
	m_ScreenFormats = nil;
	[m_Cast release];
	m_Cast = nil;
	[m_Languages release];
	m_Languages = nil;
	[m_Directors release];
	m_Directors = nil;
	[m_Genres release];
	m_Genres = nil;
	[super dealloc];
}

@end
/**
 * @interface:TitleScreenFormat
 * @key:TitleId
 * @key:DeliveryFormat
 * @key:Format
 */
@implementation NetflixCatalog_Model_TitleScreenFormat
	@synthesize m_TitleId;
	@synthesize m_DeliveryFormat;
	@synthesize m_Format;
	@synthesize m_Title;

/**
 *Method to create an instance of TitleScreenFormat
 */
+ (id) CreateTitleScreenFormatWithtitleid:(NSString *)aTitleId deliveryformat:(NSString *)aDeliveryFormat format:(NSString *)aFormat
{
	NetflixCatalog_Model_TitleScreenFormat *aTitleScreenFormat = [[NetflixCatalog_Model_TitleScreenFormat alloc]init];
	
	aTitleScreenFormat.m_TitleId = aTitleId;

	
	aTitleScreenFormat.m_DeliveryFormat = aDeliveryFormat;

	
	aTitleScreenFormat.m_Format = aFormat;

	return aTitleScreenFormat;
}
/**
 * Initialising object for TitleScreenFormat
 */
- (id) init
{
	self=[self initWithUri:nil];
	return self;
}

- (id) initWithUri:(NSString*)anUri 
{
	if(self=[super initWithUri:anUri])
	{
		[self setBaseURI:anUri];
		m_OData_hasStream.booleanvalue=NO;
		[m_OData_entityMap setObject:@"Titles" forKey:@"Title"];
		mProperties *obj;
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"30" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_TitleId"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"10" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_DeliveryFormat"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"30" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Format"];
		[obj release];
		
		[m_OData_entityFKRelation setObject:@"FK_TitleScreenFormat_Title" forKey:@"Titles"];

		NSMutableArray *anEntityKey=[[NSMutableArray alloc]init];
		[anEntityKey addObject:@"TitleId"];
		[anEntityKey addObject:@"DeliveryFormat"];
		[anEntityKey addObject:@"Format"];
		[m_OData_entityKey setObject:anEntityKey forKey:@"TitleScreenFormat"];
		[anEntityKey release];
	}
	return self;
}

-(NSMutableArray *)getSyndicateArray
{
	NSMutableArray *syndicateArray=[[NSMutableArray alloc]init];
	
	return [syndicateArray autorelease];
}
-(NetflixCatalog_Model_TitleScreenFormat *)getDeepCopy
{
	NetflixCatalog_Model_TitleScreenFormat *obj=[[NetflixCatalog_Model_TitleScreenFormat alloc]initWithUri:[self getBaseURI]];
	[obj setTitleId:[self getTitleId]];
	[obj setDeliveryFormat:[self getDeliveryFormat]];
	[obj setFormat:[self getFormat]];
	[obj setTitle:[self getTitle]];

	return [obj autorelease];
}
- (void) dealloc
{
	[m_TitleId release];
	m_TitleId = nil;
	[m_DeliveryFormat release];
	m_DeliveryFormat = nil;
	[m_Format release];
	m_Format = nil;
	
	[m_Title release];
	m_Title = nil;
	[super dealloc];
}

@end

 
/**
 * Container interface NetflixCatalog, Namespace: NetflixCatalog.Model
 */
@implementation NetflixCatalog 

	@synthesize m_OData_etag;

	@synthesize m_Genres;
	@synthesize m_Languages;
	@synthesize m_People;
	@synthesize m_TitleAudioFormats;
	@synthesize m_TitleAwards;
	@synthesize m_Titles;
	@synthesize m_TitleScreenFormats;
/**
 * The initializer for NetflixCatalog accepting service URI
 */
- (id) init
{
	NSString* tmpuri =[[NSString alloc]initWithString:DEFAULT_SERVICE_URL];
	self=[self initWithUri:tmpuri credential:nil];
	[tmpuri release];
	return self;
}

- (id) initWithUri:(NSString*)anUri credential:(id)acredential
{
	NSString* tmpuri=nil;
	if([anUri length]==0)
	{
	 	tmpuri = DEFAULT_SERVICE_URL;
	}
	else
	{
		tmpuri =[NSString stringWithString:anUri];
	}
	if(![tmpuri hasSuffix:@"/"])
	{
		tmpuri=[tmpuri stringByAppendingString:@"/"];
	}

	if(self=[super initWithUri:tmpuri credentials:acredential dataServiceVersion:DataServiceVersion])
	{
		[super setServiceNamespace:@"NetflixCatalog.Model"];

		NSMutableArray* tempEntities=[[NSMutableArray alloc]init];
		
		[tempEntities addObject:@"Genres"];
		[tempEntities addObject:@"Languages"];
		[tempEntities addObject:@"People"];
		[tempEntities addObject:@"TitleAudioFormats"];
		[tempEntities addObject:@"TitleAwards"];
		[tempEntities addObject:@"Titles"];
		[tempEntities addObject:@"TitleScreenFormats"];

		if([tempEntities count] > 0 )
		{
			[super setEntitiesWithArray:tempEntities];
		}
		[tempEntities release];

		NSMutableArray* tempEntitiySetKey=[[NSMutableArray alloc]init];
		
		[tempEntitiySetKey addObject:@"genres"];
		[tempEntitiySetKey addObject:@"languages"];
		[tempEntitiySetKey addObject:@"people"];
		[tempEntitiySetKey addObject:@"titleaudioformats"];
		[tempEntitiySetKey addObject:@"titleawards"];
		[tempEntitiySetKey addObject:@"titles"];
		[tempEntitiySetKey addObject:@"titlescreenformats"];

		NSMutableArray* tempEntitiyTypeobj=[[NSMutableArray alloc]init];
		
		[tempEntitiyTypeobj addObject:@"Genre"];
		[tempEntitiyTypeobj addObject:@"Language"];
		[tempEntitiyTypeobj addObject:@"Person"];
		[tempEntitiyTypeobj addObject:@"TitleAudioFormat"];
		[tempEntitiyTypeobj addObject:@"TitleAward"];
		[tempEntitiyTypeobj addObject:@"Title"];
		[tempEntitiyTypeobj addObject:@"TitleScreenFormat"];

		if( ( [tempEntitiySetKey count] > 0 ) && ( [tempEntitiyTypeobj count] > 0 ) )
		{
			[super setEntitySet2TypeWithObject:tempEntitiyTypeobj forKey:tempEntitiySetKey];

		}

		[tempEntitiySetKey release];
		[ tempEntitiyTypeobj release];

		NSMutableArray* tempEntitiyTypeKey=[[NSMutableArray alloc]init];
		
		[tempEntitiyTypeKey addObject:@"genre"];
		[tempEntitiyTypeKey addObject:@"language"];
		[tempEntitiyTypeKey addObject:@"person"];
		[tempEntitiyTypeKey addObject:@"titleaudioformat"];
		[tempEntitiyTypeKey addObject:@"titleaward"];
		[tempEntitiyTypeKey addObject:@"title"];
		[tempEntitiyTypeKey addObject:@"titlescreenformat"];
		NSMutableArray* tempEntitySetObj=[[NSMutableArray alloc]init];
		
		[tempEntitySetObj addObject:@"Genres"];
		[tempEntitySetObj addObject:@"Languages"];
		[tempEntitySetObj addObject:@"People"];
		[tempEntitySetObj addObject:@"TitleAudioFormats"];
		[tempEntitySetObj addObject:@"TitleAwards"];
		[tempEntitySetObj addObject:@"Titles"];
		[tempEntitySetObj addObject:@"TitleScreenFormats"];

		if( ( [tempEntitiyTypeKey count] > 0 ) && ( [tempEntitySetObj count] > 0 ) )
		{
			[super setEntityType2SetWithObject:tempEntitySetObj forKey:tempEntitiyTypeKey];

		}
    	[tempEntitiyTypeKey release];
		[tempEntitySetObj release];

		NSMutableArray* foreignKeys=[[NSMutableArray alloc]init];		
		[foreignKeys addObject:@"FK_TitleAudioFormat_Title"];
		[foreignKeys addObject:@"FK_TitleAward_Title"];
		[foreignKeys addObject:@"FK_TitleAward_Person"];
		[foreignKeys addObject:@"FK_Title_Disc"];
		[foreignKeys addObject:@"FK_Title_Movie"];
		[foreignKeys addObject:@"FK_Title_Season"];
		[foreignKeys addObject:@"FK_Title_Series"];
		[foreignKeys addObject:@"FK_TitleScreenFormat_Title"];
		[foreignKeys addObject:@"TitleActors"];
		[foreignKeys addObject:@"TitleLanguages"];
		[foreignKeys addObject:@"TitleDirectors"];
		[foreignKeys addObject:@"TitleGenres"];

		NSMutableArray *arrOfDictionaries=[[NSMutableArray alloc]initWithCapacity:[foreignKeys count]];

		NSMutableArray *arr;
 
		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles",@"EndRole",@"Title",@"Type",@"1",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"TitleAudioFormats",@"EndRole",@"TitleAudioFormat",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];


		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles",@"EndRole",@"Title",@"Type",@"1",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"TitleAwards",@"EndRole",@"TitleAward",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];


		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"People",@"EndRole",@"Person",@"Type",@"0..1",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"TitleAwards",@"EndRole",@"TitleAward",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];


		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles",@"EndRole",@"Title",@"Type",@"0..1",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles1",@"EndRole",@"Title",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];


		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles",@"EndRole",@"Title",@"Type",@"0..1",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles1",@"EndRole",@"Title",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];


		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles",@"EndRole",@"Title",@"Type",@"0..1",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles1",@"EndRole",@"Title",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];


		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles",@"EndRole",@"Title",@"Type",@"0..1",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles1",@"EndRole",@"Title",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];


		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles",@"EndRole",@"Title",@"Type",@"1",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"TitleScreenFormats",@"EndRole",@"TitleScreenFormat",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];


		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles",@"EndRole",@"Title",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"People",@"EndRole",@"Person",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];


		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles",@"EndRole",@"Title",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Language",@"EndRole",@"Language",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];


		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles",@"EndRole",@"Title",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"People",@"EndRole",@"Person",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];


		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Titles",@"EndRole",@"Title",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Genres",@"EndRole",@"Genre",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];

		if( ( [foreignKeys count] > 0 ) && ( [arrOfDictionaries count] > 0 ) )
		{
			[super setAssociationforObjects:arrOfDictionaries forKeys:foreignKeys];
		}
		[foreignKeys release];
		[arrOfDictionaries release];

		m_Genres = [[DataServiceQuery alloc]initWithUri:@"Genres" objectContext: self];
		m_Languages = [[DataServiceQuery alloc]initWithUri:@"Languages" objectContext: self];
		m_People = [[DataServiceQuery alloc]initWithUri:@"People" objectContext: self];
		m_TitleAudioFormats = [[DataServiceQuery alloc]initWithUri:@"TitleAudioFormats" objectContext: self];
		m_TitleAwards = [[DataServiceQuery alloc]initWithUri:@"TitleAwards" objectContext: self];
		m_Titles = [[DataServiceQuery alloc]initWithUri:@"Titles" objectContext: self];
		m_TitleScreenFormats = [[DataServiceQuery alloc]initWithUri:@"TitleScreenFormats" objectContext: self];
		
	}
	return self;
}

/*
 * Method for service operation
 */
- (NSArray *) Movies
{
	NSString *aQuery=[self prepareQuery:@"Movies" parameters:nil];
	return [self executeServiceOperation:aQuery httpMethod:@"GET" isReturnTypeCollection:YES];
}
/*
 * Method for service operation
 */
- (NSArray *) Series
{
	NSString *aQuery=[self prepareQuery:@"Series" parameters:nil];
	return [self executeServiceOperation:aQuery httpMethod:@"GET" isReturnTypeCollection:YES];
}
/*
 * Method for service operation
 */
- (NSArray *) Seasons
{
	NSString *aQuery=[self prepareQuery:@"Seasons" parameters:nil];
	return [self executeServiceOperation:aQuery httpMethod:@"GET" isReturnTypeCollection:YES];
}
/*
 * Method for service operation
 */
- (NSArray *) Discs
{
	NSString *aQuery=[self prepareQuery:@"Discs" parameters:nil];
	return [self executeServiceOperation:aQuery httpMethod:@"GET" isReturnTypeCollection:YES];
}
/*
 * Method for service operation
 */
- (NSArray *) Episodes
{
	NSString *aQuery=[self prepareQuery:@"Episodes" parameters:nil];
	return [self executeServiceOperation:aQuery httpMethod:@"GET" isReturnTypeCollection:YES];
}

/**
 * Method returns DataServiceQuery reference for
 * the entityset Genres
 */
- (id) genres
{
	[self.m_Genres clearAllOptions];
	return self.m_Genres;
}

/**
 * Method returns DataServiceQuery reference for
 * the entityset Languages
 */
- (id) languages
{
	[self.m_Languages clearAllOptions];
	return self.m_Languages;
}

/**
 * Method returns DataServiceQuery reference for
 * the entityset People
 */
- (id) people
{
	[self.m_People clearAllOptions];
	return self.m_People;
}

/**
 * Method returns DataServiceQuery reference for
 * the entityset TitleAudioFormats
 */
- (id) titleaudioformats
{
	[self.m_TitleAudioFormats clearAllOptions];
	return self.m_TitleAudioFormats;
}

/**
 * Method returns DataServiceQuery reference for
 * the entityset TitleAwards
 */
- (id) titleawards
{
	[self.m_TitleAwards clearAllOptions];
	return self.m_TitleAwards;
}

/**
 * Method returns DataServiceQuery reference for
 * the entityset Titles
 */
- (id) titles
{
	[self.m_Titles clearAllOptions];
	return self.m_Titles;
}

/**
 * Method returns DataServiceQuery reference for
 * the entityset TitleScreenFormats
 */
- (id) titlescreenformats
{
	[self.m_TitleScreenFormats clearAllOptions];
	return self.m_TitleScreenFormats;
}

/**
 * Methods for adding object to the entityset/collection
 */

- (void) addToGenres:(id)anObject
{
	[super addObject:@"Genres" object:anObject];
}

- (void) addToLanguages:(id)anObject
{
	[super addObject:@"Languages" object:anObject];
}

- (void) addToPeople:(id)anObject
{
	[super addObject:@"People" object:anObject];
}

- (void) addToTitleAudioFormats:(id)anObject
{
	[super addObject:@"TitleAudioFormats" object:anObject];
}

- (void) addToTitleAwards:(id)anObject
{
	[super addObject:@"TitleAwards" object:anObject];
}

- (void) addToTitles:(id)anObject
{
	[super addObject:@"Titles" object:anObject];
}

- (void) addToTitleScreenFormats:(id)anObject
{
	[super addObject:@"TitleScreenFormats" object:anObject];
}

- (void) dealloc
{
	[ m_OData_etag release];
	m_OData_etag = nil;
	
	[m_Genres release];
	m_Genres = nil;
	[m_Languages release];
	m_Languages = nil;
	[m_People release];
	m_People = nil;
	[m_TitleAudioFormats release];
	m_TitleAudioFormats = nil;
	[m_TitleAwards release];
	m_TitleAwards = nil;
	[m_Titles release];
	m_Titles = nil;
	[m_TitleScreenFormats release];
	m_TitleScreenFormats = nil;

	[super dealloc];
}

@end
