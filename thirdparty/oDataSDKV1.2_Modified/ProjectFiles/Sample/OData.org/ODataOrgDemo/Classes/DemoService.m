/**
*
*Copyright 2010 Microsoft Corp
*
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at
*
*http://www.apache.org/licenses/LICENSE-2.0
*
*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
*/
/**
* This code was generated by the tool 'odatagen'.
* Runtime Version:1.0
*
* Changes to this file may cause incorrect behavior and will be lost if
* the code is regenerated.
*/
#import "DemoService.h"

 
/**
 * Container interface DemoService, Namespace: ODataDemo
 */
@implementation DemoService 

	@synthesize m_OData_etag;

	@synthesize m_Products;
	@synthesize m_Categories;
	@synthesize m_Suppliers;
/**
 * The initializer for DemoService accepting service URI
 */
- (id) init
{
	NSString* tmpuri =[[NSString alloc]initWithString:DEFAULT_SERVICE_URL];
	self=[self initWithUri:tmpuri credential:nil];
	[tmpuri release];
	return self;
}

- (id) initWithUri:(NSString*)anUri credential:(id)acredential
{
	NSString* tmpuri=nil;
	if([anUri length]==0)
	{
	 	tmpuri = DEFAULT_SERVICE_URL;
	}
	else
	{
		tmpuri =[NSString stringWithString:anUri];
	}
	if(![tmpuri hasSuffix:@"/"])
	{
		tmpuri=[tmpuri stringByAppendingString:@"/"];
	}

	if(self=[super initWithUri:tmpuri credentials:acredential dataServiceVersion:DataServiceVersion])
	{
		[super setServiceNamespace:@"ODataDemo"];

		NSMutableArray* tempEntities=[[NSMutableArray alloc]init];
		
		[tempEntities addObject:@"Products"];
		[tempEntities addObject:@"Categories"];
		[tempEntities addObject:@"Suppliers"];

		if([tempEntities count] > 0 )
		{
			[super setEntitiesWithArray:tempEntities];
		}
		[tempEntities release];

		NSMutableArray* tempEntitiySetKey=[[NSMutableArray alloc]init];
		
		[tempEntitiySetKey addObject:@"products"];
		[tempEntitiySetKey addObject:@"categories"];
		[tempEntitiySetKey addObject:@"suppliers"];

		NSMutableArray* tempEntitiyTypeobj=[[NSMutableArray alloc]init];
		
		[tempEntitiyTypeobj addObject:@"Product"];
		[tempEntitiyTypeobj addObject:@"Category"];
		[tempEntitiyTypeobj addObject:@"Supplier"];

		if( ( [tempEntitiySetKey count] > 0 ) && ( [tempEntitiyTypeobj count] > 0 ) )
		{
			[super setEntitySet2TypeWithObject:tempEntitiyTypeobj forKey:tempEntitiySetKey];

		}

		[tempEntitiySetKey release];
		[ tempEntitiyTypeobj release];

		NSMutableArray* tempEntitiyTypeKey=[[NSMutableArray alloc]init];
		
		[tempEntitiyTypeKey addObject:@"product"];
		[tempEntitiyTypeKey addObject:@"category"];
		[tempEntitiyTypeKey addObject:@"supplier"];
		NSMutableArray* tempEntitySetObj=[[NSMutableArray alloc]init];
		
		[tempEntitySetObj addObject:@"Products"];
		[tempEntitySetObj addObject:@"Categories"];
		[tempEntitySetObj addObject:@"Suppliers"];

		if( ( [tempEntitiyTypeKey count] > 0 ) && ( [tempEntitySetObj count] > 0 ) )
		{
			[super setEntityType2SetWithObject:tempEntitySetObj forKey:tempEntitiyTypeKey];

		}
    	[tempEntitiyTypeKey release];
		[tempEntitySetObj release];

		NSMutableArray* foreignKeys=[[NSMutableArray alloc]init];		
		[foreignKeys addObject:@"Product_Category_Category_Products"];
		[foreignKeys addObject:@"Product_Supplier_Supplier_Products"];

		NSMutableArray *arrOfDictionaries=[[NSMutableArray alloc]initWithCapacity:[foreignKeys count]];

		NSMutableArray *arr;
 
		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Product_Category",@"EndRole",@"Product",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Category_Products",@"EndRole",@"Category",@"Type",@"0..1",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];


		arr=[[NSMutableArray alloc]init];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Product_Supplier",@"EndRole",@"Product",@"Type",@"*",@"Multiplicity",nil] autorelease]];
		[arr addObject:[[[NSDictionary alloc]initWithObjectsAndKeys:@"Supplier_Products",@"EndRole",@"Supplier",@"Type",@"0..1",@"Multiplicity",nil] autorelease]];
		[arrOfDictionaries addObject:arr];
		[arr release];

		if( ( [foreignKeys count] > 0 ) && ( [arrOfDictionaries count] > 0 ) )
		{
			[super setAssociationforObjects:arrOfDictionaries forKeys:foreignKeys];
		}
		[foreignKeys release];
		[arrOfDictionaries release];

		m_Products = [[DataServiceQuery alloc]initWithUri:@"Products" objectContext: self];
		m_Categories = [[DataServiceQuery alloc]initWithUri:@"Categories" objectContext: self];
		m_Suppliers = [[DataServiceQuery alloc]initWithUri:@"Suppliers" objectContext: self];
		
	}
	return self;
}

/*
 * Method for service operation
 */
- (NSArray *) GetProductsByRatingWithrating:(NSNumber *)rating
{
	NSDictionary *params=[[NSDictionary alloc] initWithObjectsAndKeys:rating,@"rating",nil];
	NSString *aQuery=[self prepareQuery:@"GetProductsByRating" parameters:params];
	[params release];

	return [self executeServiceOperation:aQuery httpMethod:@"GET" isReturnTypeCollection:YES];
}

/**
 * Method returns DataServiceQuery reference for
 * the entityset Products
 */
- (id) products
{
	[self.m_Products clearAllOptions];
	return self.m_Products;
}

/**
 * Method returns DataServiceQuery reference for
 * the entityset Categories
 */
- (id) categories
{
	[self.m_Categories clearAllOptions];
	return self.m_Categories;
}

/**
 * Method returns DataServiceQuery reference for
 * the entityset Suppliers
 */
- (id) suppliers
{
	[self.m_Suppliers clearAllOptions];
	return self.m_Suppliers;
}

/**
 * Methods for adding object to the entityset/collection
 */

- (void) addToProducts:(id)anObject
{
	[super addObject:@"Products" object:anObject];
}

- (void) addToCategories:(id)anObject
{
	[super addObject:@"Categories" object:anObject];
}

- (void) addToSuppliers:(id)anObject
{
	[super addObject:@"Suppliers" object:anObject];
}

- (void) dealloc
{
	[ m_OData_etag release];
	m_OData_etag = nil;
	
	[m_Products release];
	m_Products = nil;
	[m_Categories release];
	m_Categories = nil;
	[m_Suppliers release];
	m_Suppliers = nil;

	[super dealloc];
}

@end

@implementation ODataDemo_Address
	@synthesize m_Street;
	@synthesize m_City;
	@synthesize m_State;
	@synthesize m_ZipCode;
	@synthesize m_Country;
@end
/**
 * @interface:Product
 * @key:ID
 */
@implementation ODataDemo_Product
	@synthesize m_ID;
	@synthesize m_Name;
	@synthesize m_Description;
	@synthesize m_ReleaseDate;
	@synthesize m_DiscontinuedDate;
	@synthesize m_Rating;
	@synthesize m_Price;
	@synthesize m_Category;
	@synthesize m_Supplier;

/**
 *Method to create an instance of Product
 */
+ (id) CreateProductWithid:(NSNumber *)aID releasedate:(NSDate *)aReleaseDate rating:(NSNumber *)aRating price:(NSDecimalNumber *)aPrice
{
	ODataDemo_Product *aProduct = [[ODataDemo_Product alloc]init];
	
	aProduct.m_ID = aID;

	
	aProduct.m_ReleaseDate = aReleaseDate;

	
	aProduct.m_Rating = aRating;

	
	aProduct.m_Price = aPrice;

	return aProduct;
}
/**
 * Initialising object for Product
 */
- (id) init
{
	self=[self initWithUri:nil];
	return self;
}

- (id) initWithUri:(NSString*)anUri 
{
	if(self=[super initWithUri:anUri])
	{
		[self setBaseURI:anUri];
		m_OData_hasStream.booleanvalue=NO;
		[m_OData_entityMap setObject:@"Category_Products" forKey:@"Category"];
		[m_OData_entityMap setObject:@"Supplier_Products" forKey:@"Supplier"];
		mProperties *obj;
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Int32" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_ID"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"SyndicationTitle" FC_KeepInContent:NO FC_SourcePath:@"" FC_ContentKind:@"text" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Name"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"SyndicationSummary" FC_KeepInContent:NO FC_SourcePath:@"" FC_ContentKind:@"text" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Description"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.DateTime" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_ReleaseDate"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.DateTime" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_DiscontinuedDate"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Int32" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Rating"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Decimal" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Price"];
		[obj release];
		
		[m_OData_entityFKRelation setObject:@"Product_Category_Category_Products" forKey:@"Category_Products"];
		[m_OData_entityFKRelation setObject:@"Product_Supplier_Supplier_Products" forKey:@"Supplier_Products"];

		NSMutableArray *anEntityKey=[[NSMutableArray alloc]init];
		[anEntityKey addObject:@"ID"];
		[m_OData_entityKey setObject:anEntityKey forKey:@"Product"];
		[anEntityKey release];
	}
	return self;
}

-(NSMutableArray *)getSyndicateArray
{
	NSMutableArray *syndicateArray=[[NSMutableArray alloc]init];
	[syndicateArray addObject:@"m_Name"];
	[syndicateArray addObject:@"m_Description"];
	
	return [syndicateArray autorelease];
}
-(ODataDemo_Product *)getDeepCopy
{
	ODataDemo_Product *obj=[[ODataDemo_Product alloc]initWithUri:[self getBaseURI]];
	[obj setID:[self getID]];
	[obj setName:[self getName]];
	[obj setDescription:[self getDescription]];
	[obj setReleaseDate:[self getReleaseDate]];
	[obj setDiscontinuedDate:[self getDiscontinuedDate]];
	[obj setRating:[self getRating]];
	[obj setPrice:[self getPrice]];
	[obj setCategory:[self getCategory]];
	[obj setSupplier:[self getSupplier]];

	return [obj autorelease];
}
- (void) dealloc
{
	[m_ID release];
	m_ID = nil;
	[m_Name release];
	m_Name = nil;
	[m_Description release];
	m_Description = nil;
	[m_ReleaseDate release];
	m_ReleaseDate = nil;
	[m_DiscontinuedDate release];
	m_DiscontinuedDate = nil;
	[m_Rating release];
	m_Rating = nil;
	[m_Price release];
	m_Price = nil;
	
	[m_Category release];
	m_Category = nil;
	[m_Supplier release];
	m_Supplier = nil;
	[super dealloc];
}

@end
/**
 * @interface:Category
 * @key:ID
 */
@implementation ODataDemo_Category
	@synthesize m_ID;
	@synthesize m_Name;
	@synthesize m_Products;

/**
 *Method to create an instance of Category
 */
+ (id) CreateCategoryWithid:(NSNumber *)aID
{
	ODataDemo_Category *aCategory = [[ODataDemo_Category alloc]init];
	
	aCategory.m_ID = aID;

	return aCategory;
}
/**
 * Initialising object for Category
 */
- (id) init
{
	self=[self initWithUri:nil];
	return self;
}

- (id) initWithUri:(NSString*)anUri 
{
	if(self=[super initWithUri:anUri])
	{
		[self setBaseURI:anUri];
		m_OData_hasStream.booleanvalue=NO;
		[m_OData_entityMap setObject:@"Product_Category" forKey:@"Products"];
		mProperties *obj;
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Int32" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_ID"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"SyndicationTitle" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"text" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Name"];
		[obj release];
		
		[m_OData_entityFKRelation setObject:@"Product_Category_Category_Products" forKey:@"Product_Category"];

		NSMutableArray *anEntityKey=[[NSMutableArray alloc]init];
		[anEntityKey addObject:@"ID"];
		[m_OData_entityKey setObject:anEntityKey forKey:@"Category"];
		[anEntityKey release];
	}
	return self;
}

-(NSMutableArray *)getSyndicateArray
{
	NSMutableArray *syndicateArray=[[NSMutableArray alloc]init];
	[syndicateArray addObject:@"m_Name"];
	
	return [syndicateArray autorelease];
}
-(ODataDemo_Category *)getDeepCopy
{
	ODataDemo_Category *obj=[[ODataDemo_Category alloc]initWithUri:[self getBaseURI]];
	[obj setID:[self getID]];
	[obj setName:[self getName]];
	[obj setProducts:[self getProducts]];

	return [obj autorelease];
}
- (void) dealloc
{
	[m_ID release];
	m_ID = nil;
	[m_Name release];
	m_Name = nil;
	
	[m_Products release];
	m_Products = nil;
	[super dealloc];
}

@end
/**
 * @interface:Supplier
 * @key:ID
 */
@implementation ODataDemo_Supplier
	@synthesize m_ID;
	@synthesize m_Name;
	@synthesize m_Address;
	@synthesize m_Concurrency;
	@synthesize m_Products;

/**
 *Method to create an instance of Supplier
 */
+ (id) CreateSupplierWithid:(NSNumber *)aID address:(ODataDemo_Address *)aAddress concurrency:(NSNumber *)aConcurrency
{
	ODataDemo_Supplier *aSupplier = [[ODataDemo_Supplier alloc]init];
	
	aSupplier.m_ID = aID;

	
	aSupplier.m_Address = aAddress;

	
	aSupplier.m_Concurrency = aConcurrency;

	return aSupplier;
}
/**
 * Initialising object for Supplier
 */
- (id) init
{
	self=[self initWithUri:nil];
	return self;
}

- (id) initWithUri:(NSString*)anUri 
{
	if(self=[super initWithUri:anUri])
	{
		[self setBaseURI:anUri];
		m_OData_hasStream.booleanvalue=NO;
		[m_OData_entityMap setObject:@"Product_Supplier" forKey:@"Products"];
		mProperties *obj;
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Int32" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_ID"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"SyndicationTitle" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"text" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Name"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"ODataDemo.Address" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Address"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Int32" MaxLength:@"" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"Fixed" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Concurrency"];
		[obj release];
		
		[m_OData_entityFKRelation setObject:@"Product_Supplier_Supplier_Products" forKey:@"Product_Supplier"];

		NSMutableArray *anEntityKey=[[NSMutableArray alloc]init];
		[anEntityKey addObject:@"ID"];
		[m_OData_entityKey setObject:anEntityKey forKey:@"Supplier"];
		[anEntityKey release];
	}
	return self;
}

-(NSMutableArray *)getSyndicateArray
{
	NSMutableArray *syndicateArray=[[NSMutableArray alloc]init];
	[syndicateArray addObject:@"m_Name"];
	
	return [syndicateArray autorelease];
}
-(ODataDemo_Supplier *)getDeepCopy
{
	ODataDemo_Supplier *obj=[[ODataDemo_Supplier alloc]initWithUri:[self getBaseURI]];
	[obj setID:[self getID]];
	[obj setName:[self getName]];
	[obj setAddress:[self getAddress]];
	[obj setConcurrency:[self getConcurrency]];
	[obj setProducts:[self getProducts]];

	return [obj autorelease];
}
- (void) dealloc
{
	[m_ID release];
	m_ID = nil;
	[m_Name release];
	m_Name = nil;
	[m_Concurrency release];
	m_Concurrency = nil;
	
	[m_Products release];
	m_Products = nil;
	[super dealloc];
}

@end
